counts_5 <- as.matrix(counts[,sample_properties[4,]=="5"])
lfc_all_3 <- compute_lfc_from_counts(counts_3[,-ncol(counts_3)],counts_3[,ncol(counts_3)])
lfc_all_5 <- compute_lfc_from_counts(counts_5[,-ncol(counts_5)],counts_5[,ncol(counts_5),drop=F])
lfc_K562.low_3 <- lfc_all_3[,sapply(colnames(lfc_all_3),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
counts_K562.low_3 <- counts_3[,sapply(colnames(counts_3),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
sequencingCoverage_K562.low_3 <- colSums(counts_K562.low_3)/nrow(counts_K562.low_3)
experimentCoverage_K562.low_3 <- lapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2])})
experimentCoverage_K562.low_3 <- lapply(experimentCoverage_K562.low_3,function(x)
{return(as.numeric(strsplit(x,"x")[[1]][1]))})
cor(unlist(experimentCoverage_K562.low_3),sequencingCoverage_K562.low_3)
lfc_K562.low_3_lowest <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("25x","30x"))})]
lfc_K562.low_3_lowest <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_lowest)
sa
saveRDS(lfc_K562.low_3_lowest,file=paste(saveLocation,"lfc_K562.low_3_lowest.rds",sep=""))
head(lfc_K562.low_3_lowest)
source('~/Documents/BSure_additional_files/download_subset_data.R')
#' Subset HT29 data
#'
data("HT29_count_data")
data(auxData)
source('~/Documents/BSure_additional_files/runBSure_command_line_arguments.R')
data("Behan_et_al_list_differentially_essential_sub")
Behan_et_al_list_differentially_essential_sub[length(Behan_et_al_list_differentially_essential_sub)]
sample(1:12,[3,8])
sample(1:12,3,8)
#average sequencing coverage for different levels of experiment coverage
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_lowest)]))#217.7504
colnames(lfc_K562.low_3_lowest)
counts_3[,colnames(lfc_K562.low_3_lowest)])
counts_3[,colnames(lfc_K562.low_3_lowest)]
head(counts_3)
#average sequencing coverage for different levels of experiment coverage
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_lowest)[-(1:2)]]))#217.7504
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_mid)[-(1:2)]]))#152.0641
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_high)[-(1:2)]]))#185.7432
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_highest[-(1:2)])]))#259.0005
#90x both 3' and 5', 180x only 3', only 5'
lfc_K562.low_5 <- lfc_all_5[,sapply(colnames(lfc_all_5),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562.low")})]
lfc_K562.low_5_90 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
head(lfc_all_5)
#90x both 3' and 5', 180x only 3', only 5'
lfc_K562.low_5 <- lfc_all_5[,sapply(colnames(lfc_all_5),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
lfc_K562.low_5_90 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_3_90 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_90 <- cbind(lfc_K562.low_3_90,lfc_K562.low_5_90)
#90x both 3' and 5', 180x only 3', only 5'
lfc_K562.low_5 <- lfc_all_5[,sapply(colnames(lfc_all_5),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
lfc_K562.low_5_90 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_3_90 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_90 <- cbind(lfc_K562.low_3_90,lfc_K562.low_5_90)
lfc_K562.low_90 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_90)
saveRDS(lfc_K562.low_90,file=paste(saveLocation,"lfc_K562.low_90.rds",sep=""))
setwd("~/Documents/BSure_additional_files")
saveRDS(lfc_K562.low_90,file=paste(saveLocation,"lfc_K562.low_90.rds",sep=""))
lfc_K562.low_5_180 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_3_180 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_180 <- cbind(lfc_K562.low_3_180,lfc_K562.low_5_180)
#90x both 3' and 5', 180x only 3', only 5'
lfc_K562.low_5 <- lfc_all_5[,sapply(colnames(lfc_all_5),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
lfc_K562.low_5_90 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_3_90 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_90 <- cbind(lfc_K562.low_3_90,lfc_K562.low_5_90)
lfc_K562.low_90 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_90)
saveRDS(lfc_K562.low_90,file=paste(saveLocation,"lfc_K562.low_90.rds",sep=""))
head(lfc_K562.low_3_90)
lfc_K562.low_90 <- cbind(lfc_K562.low_3_90,lfc_K562.low_5_90)
lfc_K562.low_90 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_90)
saveRDS(lfc_K562.low_90,file=paste(saveLocation,"lfc_K562.low_90.rds",sep=""))
head(lfc_K562.low_90)
lfc_K562.low_5_180 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_5_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_5_180)
lfc_K562.low_3_180 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_3_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_180)
lfc_K562.low_180 <- cbind(lfc_K562.low_3_180,lfc_K562.low_5_180[,-c(1:2)])
lfc_K562.low_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_180)
saveRDS(lfc_K562.low_3_180,file=paste(saveLocation,"lfc_K562.low_3_180.rds",sep=""))
saveRDS(lfc_K562.low_5_180,file=paste(saveLocation,"lfc_K562.low_5_180.rds",sep=""))
saveRDS(lfc_K562.low_180,file=paste(saveLocation,"lfc_K562.low_180.rds",sep=""))
head(lfc_K562.low_3_180)
head(lfc_K562.low_5_180)
rand_subsets <- sapply(1:8,function(j) sample(1:12,3))
rand_subsets
lfc_higherCas9_3 <- lfc_all_3[,grepl("K562_",colnames(lfc_all_3))]
lfc_higherCas9_3
head(lfc_higherCas9_3)
lfc_higherCas9_high_coverage <- cbind(counts_dgrna[,c(1,3)],lfc_all_3[,"K562_134x_D14_3"],
lfc_all_5[,"K562_134x_D14_5"])
head(lfc_higherCas9_high_coverage)
#' Subset dgRNA datasets (Peets et al., 2019)
library(BSure)
data("counts_dgrna")
extract_type_coverage_day_dir <- function(sample_name)
{
a <- as.vector(strsplit(sample_name,"_")[[1]])
a[2] <- strsplit(a[2],"x")[[1]][1]
return(a)
}
saveLocation <- "counts_dgrna/"
dir.create(saveLocation)
counts <- as.matrix(counts_dgrna[,-(1:3)])
sample_properties <- sapply(colnames(counts),extract_type_coverage_day_dir)
sort(as.numeric(sample_properties[2,sample_properties[1,] == "K562-low"]))
sort(as.numeric(sample_properties[2,sample_properties[1,] == "K562"]))
rownames(sample_properties) <- c("cell line","coverage","day","direction")
sort(as.numeric(sample_properties[2,]))
counts_3 <- counts[,sample_properties[4,]=="3"]
sequencingCoverage_3 <- colSums(counts_3)/nrow(counts_3)
counts_5 <- as.matrix(counts[,sample_properties[4,]=="5"])
lfc_all_3 <- compute_lfc_from_counts(counts_3[,-ncol(counts_3)],counts_3[,ncol(counts_3)])
lfc_all_5 <- compute_lfc_from_counts(counts_5[,-ncol(counts_5)],counts_5[,ncol(counts_5),drop=F])
lfc_K562.low_3 <- lfc_all_3[,sapply(colnames(lfc_all_3),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
counts_K562.low_3 <- counts_3[,sapply(colnames(counts_3),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
sequencingCoverage_K562.low_3 <- colSums(counts_K562.low_3)/nrow(counts_K562.low_3)
experimentCoverage_K562.low_3 <- lapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2])})
experimentCoverage_K562.low_3 <- lapply(experimentCoverage_K562.low_3,function(x)
{return(as.numeric(strsplit(x,"x")[[1]][1]))})
cor(unlist(experimentCoverage_K562.low_3),sequencingCoverage_K562.low_3)
lfc_K562.low_3_lowest <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("25x","30x"))})]
lfc_K562.low_3_lowest <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_lowest)
saveRDS(lfc_K562.low_3_lowest,file=paste(saveLocation,"lfc_K562.low_3_lowest.rds",sep=""))
lfc_K562.low_3_low <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("45x","55x"))})]
lfc_K562.low_3_low <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_low)
saveRDS(lfc_K562.low_3_low,file=paste(saveLocation,"lfc_K562.low_3_low.rds",sep=""))
lfc_K562.low_3_mid <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x","92x"))})]
lfc_K562.low_3_mid <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_mid)
saveRDS(lfc_K562.low_3_mid,file=paste(saveLocation,"lfc_K562.low_3_mid.rds",sep=""))
lfc_K562.low_3_high <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("120x","130x"))})]
lfc_K562.low_3_high <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_high)
saveRDS(lfc_K562.low_3_high,file=paste(saveLocation,"lfc_K562.low_3_high.rds",sep=""))
lfc_K562.low_3_highest <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("160x","180x"))})]
lfc_K562.low_3_highest <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_highest)
saveRDS(lfc_K562.low_3_highest,file=paste(saveLocation,"lfc_K562.low_3_highest.rds",sep=""))
#average sequencing coverage for different levels of experiment coverage
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_lowest)[-(1:2)]]))#217.7504
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_mid)[-(1:2)]]))#152.0641
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_high)[-(1:2)]]))#185.7432
mean(colMeans(counts_3[,colnames(lfc_K562.low_3_highest[-(1:2)])]))#259.0005
#90x both 3' and 5', 180x only 3', only 5'
lfc_K562.low_5 <- lfc_all_5[,sapply(colnames(lfc_all_5),function(x)
{return(strsplit(x,"_")[[1]][1] == "K562-low")})]
lfc_K562.low_5_90 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_3_90 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("90x"))})]
lfc_K562.low_90 <- cbind(lfc_K562.low_3_90,lfc_K562.low_5_90)
lfc_K562.low_90 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_90)
saveRDS(lfc_K562.low_90,file=paste(saveLocation,"lfc_K562.low_90.rds",sep=""))
lfc_K562.low_5_180 <- lfc_K562.low_5[,sapply(colnames(lfc_K562.low_5),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_5_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_5_180)
lfc_K562.low_3_180 <- lfc_K562.low_3[,sapply(colnames(lfc_K562.low_3),function(x)
{return(strsplit(x,"_")[[1]][2] %in% c("180x"))})]
lfc_K562.low_3_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_3_180)
lfc_K562.low_180 <- cbind(lfc_K562.low_3_180,lfc_K562.low_5_180[,-c(1:2)])
lfc_K562.low_180 <- cbind(counts_dgrna[,c(1,3)],lfc_K562.low_180)
saveRDS(lfc_K562.low_3_180,file=paste(saveLocation,"lfc_K562.low_3_180.rds",sep=""))
saveRDS(lfc_K562.low_5_180,file=paste(saveLocation,"lfc_K562.low_5_180.rds",sep=""))
saveRDS(lfc_K562.low_180,file=paste(saveLocation,"lfc_K562.low_180.rds",sep=""))
lfc_higherCas9_high_coverage <- cbind(counts_dgrna[,c(1,3)],lfc_all_3[,"K562_134x_D14_3"],
lfc_all_5[,"K562_134x_D14_5"])
saveRDS(lfc_higherCas9_high_coverage,file=paste(saveLocation,"lfc_higherCas9_high_coverage.rds",sep=""))
#' Random subsets with 3 replicates from HT29 count data
#
pkgbuild::compile_dll()
setwd("~/Documents/BSure")
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure")
install.packages("../BSure",repos=NULL,type="source")
library(BSure)
data("counts_HT29.rda)
data("counts_HT29.rda")
data("counts_HT29")
counts_HT29_small_subset <- create_small_subset(counts_HT29)
counts_HT29 <- HT29_count_data
save(counts_HT29,file="data/counts_HT29.rda")
counts_HT29_small_subset <- create_small_subset(counts_HT29)
data("auxData")
coreEssGenes <- intersect(CEGv2,coreFitnessBehanEtAl)
nonEssGenes <- NEG
data("Behan_et_al_list_differentially_essential_sub")
genes <- counts[,2]
gene_subset <- c(sample(coreEssGenes,20,replace=F),
sample(nonEssGenes,20,replace=F),
sample(Behan_et_al_list_differentially_essential_sub,20,replace=F))
counts <- counts_HT29
subset_counts <- counts[counts[,2]%in%gene_subset]
counts[, 2]
gene_subset
subset_counts <- counts[counts[,2]%in%gene_subset,]
return(subset_counts)
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure",type="source")
install.packages("../BSure",type="source",repos=NULL)
library(BSure)
setwd("~/Documents/BSure")
devtools::use_vignette("BSure")
libraray(devtools)
library(devtools)
devtools::use_vignette("BSure")
library(BSure)
load(K5)
data("counts_dgrna")
head(counts_dgrna)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_high_lowest_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure")
install.packages("../BSure",repos=NULL,type="source")
library(BSure)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
View(extracted_output)
resultsK562_highest_extracted_output <- extracted_output
save(resultsK562_highest_extracted_output,file="data/resultsK562_highest_extracted_output")
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
resultsK562_high_extracted_output <- extracted_output
save(resultsK562_high_extracted_output,file="data/resultsK562_high_extracted_output.rda")
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
resultsK562_lowest_extracted_output <- extracted_output
save(resultsK562_lowest_extracted_output,file="data/resultsK562_lowest_extracted_output.rda")
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
resultsK562_highCas9_extracted_output <- extracted_output
save(resultsK562_highCas9_extracted_output,file="data/resultsK562_highCas9_extracted_output.rda")
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output)
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output,
"160x-180x","120x-130x")
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
resultsK562_highest_extracted_output <- extracted_output
save(resultsK562_highest_extracted_output,file="resultsK562_highest_extracted_output.rda")
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
resultsK562_high_extracted_output <- extracted_output
save(resultsK562_high_extracted_output,file="resultsK562_high_extracted_output.rda")
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
resultsK562_lowest_extracted_output <- extracted_output
save(resultsK562_lowest_extracted_output,file="resultsK562_lowest_extracted_output.rda")
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
resultsK562_highCas9_extracted_output <- extracted_output
save(resultsK562_highCas9_extracted_output,file="resultsK562_highCas9_extracted_output.rda")
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output, "160x-180x","120x-130x")
rm(extracted_output)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
load("~/Documents/BSure/data/resultsK562_high_extracted_output.rda")
load("~/Documents/BSure/data/resultsK562_highest_extracted_output.rda")
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output, "160x-180x","120x-130x")
comparison_highest_lowest <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_lowest_extracted_output, "160x-180x","25x-30x")
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output, "160x-180x","120x-130x")
load("~/Documents/BSure/data/resultsK562_lowest_extracted_output.rda")
comparison_highest_lowest <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_lowest_extracted_output, "160x-180x","25x-30x")
comparison_highest_high <- compare_length_of_credible_intervals(resultsK562_highest_extracted_output,resultsK562_high_extracted_output, "160x-180x","120x-130x")
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure",type="source",repos=NULL)
library(BSure)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
resultsK562_highest_extracted_output <- extracted_output
save(resultsK562_highest_extracted_output,file="resultsK562_highest_extracted_output.rda")
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure",type="source",repos=NULL)
load("~/Documents/BSure/data/resultsK562_highest_extracted_output.rda")
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
library(BSure)
library(BSure)
data("resultsK562_highest_extracted_output") #screens with highest experiment coverage levels (160x-180x), lower Cas9 activity
data("resultsK562_high_extracted_output") #120x-130x experiment coverage levels, lower Cas9 activity
data("resultsK562_lowest_extracted_output") #25x-30x experiment coverage levels, lower Cas9 activity
data("resultsK562_highCas9_extracted_output")#higher Cas9 activity, 134x coverage
resultsK562_highest_extracted_output <- extracted_output
> save(resultsK562_highest_extracted_output,file="data/resultsK562_highest_extracted_output.rda")
save(resultsK562_highest_extracted_output,file="data/resultsK562_highest_extracted_output.rda")
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure",type="source",repos=NULL)
extracted_gene_categories_higherCas9 <- extract_gene_categories(resultsK562_highCas9_extracted_output)
extracted_gene_categories_higherCas9 <- extract_gene_categories(resultsK562_highCas9_extracted_output)
extracted_gene_categories_highest <- extract_gene_categories(resultsK562_highest_extracted_output)
extracted_gene_categories_highest <- extract_gene_categories(resultsK562_highest_extracted_output)
data("counts_HT29")
data(counts_HT29)
HT29_small <- create_small_subset(counts_HT29)
warnings()
counts_HT29 <- data(counts_HT29)
HT29_small <- create_small_subset(counts_HT29)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
rm(list=ls())
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
colnames(HT29_small)
#The last column is the control measurement.
nc <- ncol(HT29_small)
counts <- HT29_small[,-nc]
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
#first column: gRNAs, second column: corresponding genes, third to last column: log-fold changes for all replicates
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
View(HT29_lfc_small)
(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500
lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500
lfc=HT29_lfc_small
,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500
save_file_name="HT29_lfc_small"
n_cores=2
min_tail_ESS=500
gRNAToGene <- as.matrix(lfc[,1:2])
lfc <- lfc[,-(1:2),drop=F]
lfc <- as.matrix(lfc)
geneNames <- unique(gRNAToGene[,2])
data(auxData)
coreEssGenes <- intersect(CEGv2,coreFitnessBehanEtAl)
nonEssGenes <- NEG
geneNames <- unique(gRNAToGene[,2])
x1 <- which(gRNAToGene[,2]%in%coreEssGenes)
x2 <- which(gRNAToGene[,2]%in%nonEssGenes)
x1 <- x1[!is.na(x1)]
x2 <- x2[!is.na(x2)]
gRNAEssentialMedian <- apply(lfc[x1,,drop=F],2,function(x) return(median(x,na.rm=T)))
gRNA_NE_median <- apply(lfc[x2,,drop=F],2,function(x) return(median(x,na.rm=T)))
head(lfc)
lfc <- as.mumeric(as.matrix(lfc))
lfc <- as.numeric(as.matrix(lfc))
lfc <- HT29_lfc_small
gRNAToGene <- as.matrix(lfc[,1:2])
lfc <- lfc[,-(1:2),drop=F]
M <- matrix(nrow=nrow(lfc),ncol=ncol(lfc))
M <- as.numeric(as.matrix(lfc))
M <- matrix(nrow=nrow(lfc),ncol=ncol(lfc))
M[] <- as.numeric(as.matrix(lfc))
lfc <- M
geneNames <- unique(gRNAToGene[,2])
data(auxData)
coreEssGenes <- intersect(CEGv2,coreFitnessBehanEtAl)
nonEssGenes <- NEG
geneNames <- unique(gRNAToGene[,2])
x1 <- which(gRNAToGene[,2]%in%coreEssGenes)
x2 <- which(gRNAToGene[,2]%in%nonEssGenes)
x1 <- x1[!is.na(x1)]
x2 <- x2[!is.na(x2)]
gRNAEssentialMedian <- apply(lfc[x1,,drop=F],2,function(x) return(median(x,na.rm=T)))
gRNA_NE_median <- apply(lfc[x2,,drop=F],2,function(x) return(median(x,na.rm=T)))
setwd("~/Documents/BSure")
pkgbuild::compile_dll()
roxygen2::roxygenize()
install.packages("../BSure")
install.packages("../BSure",repos=NULL,type="source")
library(BSure)
setwd("")
setwd("../BSure_additional_files")
library(BSure)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
#first column: gRNAs, second column: corresponding genes, third to last column: log-fold changes for all replicates
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
getwd()
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
getwd()
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
library(BSure)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
#first column: gRNAs, second column: corresponding genes, third to last column: log-fold changes for all replicates
library(BSure)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
#first column: gRNAs, second column: corresponding genes, third to last column: log-fold changes for all replicates
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
getwd()
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
#first column: gRNAs, second column: corresponding genes, third to last column: log-fold changes for all replicates
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
rm(list=ls())
library(BSure)
library(BSure)
data(counts_HT29)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
HT29_small <- create_small_subset(counts=counts_HT29)
rm(list=ls())
library(BSure)
data(counts_HT29)
HT29_small <- create_small_subset(counts=counts_HT29)
colnames(HT29_small)
#The last column is the control measurement. The first column contains the gRNAs and the second the
#names of the corresponding genes.
nc <- ncol(HT29_small)
counts <- HT29_small[,-c(1:2,nc)]#removing columns of gRNAs, genes and controls
controls <- HT29_small[,nc]
lfc_small <- compute_lfc_from_counts(counts=counts, controls=controls)
HT29_lfc_small <- cbind(HT29_small$sgRNA,HT29_small$gene,lfc_small)#required format for BSUre algorithm:
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
runBSure(lfc=HT29_lfc_small,save_file_name="HT29_lfc_small",n_cores=2,min_tail_ESS=500)
load("HT29_lfc_small.rda")#save_file_name from above plus ".rda"
extracted_output_HT29 <- extract(output)
pkgbuild::compile_dll()
pkgbuild::compile_dll("../BSure")
roxygen2::roxygenize("../BSure")
install.packages("../BSure")
library(BSure)
install.packages("../BSure",repos=NULL,type="source")
library(BSure)
load("HT29_lfc_small.rda")#save_file_name from above plus ".rda"
extracted_output_HT29 <- extract_from_output(output)
extracted_gene_categories_HT29 <- extracted_gene_categories(extracted_output_HT29)
extracted_gene_categories_HT29 <- extract_gene_categories(extracted_output_HT29)
plot_credible_intervals(extracted_output_HT29,"HT29_small")
extracted_gene_categories_highest <- extract_gene_categories(resultsK562_highest_extracted_output)
